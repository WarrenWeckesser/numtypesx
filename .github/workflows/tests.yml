name: tests

on: [push, pull_request]

jobs:

  numpy-main:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # python-version: ['3.9', '3.10', '3.11']
        python-version: ['3.11']

    steps:
    - uses: actions/checkout@v4
    - name: Set up ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        sudo apt-get install libopenblas-dev
        pushd .
        cd ..
        git clone --shallow-submodules --recurse-submodules --depth 1 https://github.com/numpy/numpy.git
        cd numpy
        python -m pip install -r build_requirements.txt
        #
        # We have a shallow clone of the main branch of NumPy, which has no
        # git tags.  The code in versioneer.py requires a tag to create a
        # version, so create a tag with a blatantly fake version number.
        #
        git config user.email "foo@example.com"
        git config user.name "Foo"
        git tag -a v999.0.0 -m "NumPy main development branch"
        python -m pip install --no-build-isolation .
        popd
        #
        python -m pip install pytest toml Jinja2
        #
    - name: Install numtypesx
      run: |
        export NUMPY_EXPERIMENTAL_DTYPE_API=1
        python -m pip install --no-build-isolation .
    - name: Test with pytest
      run: |
        export NUMPY_EXPERIMENTAL_DTYPE_API=1
        pytest --pyargs numtypesx

  windows-msvc:

    strategy:
      matrix:
        python-version: ['3.10', '3.11']
        os: ['windows-2019', 'windows-latest']
      fail-fast: false

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up msvc-dev-cmd
      uses: ilammy/msvc-dev-cmd@v1

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        architecture: 'x64'
        cache: 'pip'
        cache-dependency-path: 'environment.yml'

    - name: Install Python dependencies
      run: |
        pip install meson ninja meson-python pytest toml Jinja2

    - name: Install numpy (from anaconda nightly repo)
      run: |
        pip install -i https://pypi.anaconda.org/scientific-python-nightly-wheels/simple numpy

    - name: Install numptypesx
      run: |
        python -m pip install --no-build-isolation .

    - name: Test
      run: |
        $env:NUMPY_EXPERIMENTAL_DTYPE_API = '1'
        pytest --pyargs numtypesx
